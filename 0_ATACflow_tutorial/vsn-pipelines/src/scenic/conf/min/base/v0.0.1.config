// Define local variable otherwise it's going to be kept in the final config
def _ = params.tools.scenic
// Sanity checks
if(!params.global.containsKey("species"))
    throw new Exception("The params.global.species parameter is required.")
if(!params.global.containsKey("genome"))
    throw new Exception("The params.global.genome.assembly parameter is required.")
if(!params.global.containsKey("outdir"))
    throw new Exception("The params.global.outdir parameter is required.")

params {
    global = params.global
    tools {
        scenic {
            // Container settings
            container = 'aertslab/pyscenic:0.10.0'

            // Reporting settings
            reports {
                main = "/src/scenic/bin/reports/scenic_report.ipynb"
            }

            // Computation settings
            mode = "dask_multiprocessing"
            client_or_address = ""

            // Input loom settings
            filteredLoom = "/ddn1/vol1/staging/leuven/stg_00002/lcb/cflerin/testruns/scenic-nf_testing/expr_mat.loom" // for testing
            cell_id_attribute = "CellID"
            gene_attribute = "Gene"

            // Output settings
            scenicoutdir = "${params.global.outdir}/scenic/"
            scenicOutputLoom = "SCENIC_output.loom"
            scenicScopeOutputLoom = "SCENIC_SCope_output.loom"
        }
    }
}

// Databases versions
// PUBLIC
params.tools.scenic.tfsVersion = _.containsKey("cistarget") && _.cistarget.containsKey("tfsVersion") ? _.tfsVersion : "${params.global.species}-v0.0.1"
params.tools.scenic.motifsDbVersion = _.containsKey("cistarget") && _.cistarget.containsKey("motifsDbVersion") ? _.motifsDbVersion : "${params.global.species}-${params.global.genome.assembly}-v0.0.1"
params.tools.scenic.tracksDbVersion = _.containsKey("cistarget") && _.cistarget.containsKey("tracksDbVersion") ? _.tracksDbVersion :  "${params.global.species}-${params.global.genome.assembly}-v0.0.1"


includeConfig '../labels.config'
includeConfig '../grn.config'
includeConfig '../cistarget.config'
includeConfig '../aucell.config'
includeConfig '../scope.config'
